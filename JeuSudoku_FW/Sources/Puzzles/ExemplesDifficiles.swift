//
//  ExemplesDifficiles.swift
//  JeuSudoku_FW
//
//  Created by Gérard Tisseau on 02/03/2023.
//

import Foundation

public extension Puzzle {
    
    
    /// Les 10 premiers exemples difficiles de niveau 2.5 : le minimum pour un difficile.
    /// SudokuExchange dit que le puzzle d'indice 3 n'a pas une solution unique.
    /// Cela n'empêche pas d'en trouver une.

    static let codeExemplesDifficilesA = """
000694f16758 570060003030005060601007000053000001000080000900000270000800402080100030200040019  2.5
000ad59f2fc5 000801000005064100060700080250000403090000070406000012010009020002570900000103000  2.5
000d0aa02b77 009003000710000000800795300050009800207000906006500070005812009000000042000900600  2.5
00141209de66 304801607000375000000000000050904030600080001038000790000030000080609040006000900  2.5
0015d55a6ec4 900800000750000000081690000073046005002000600500970420000018270000000064000002001  2.5
00189ac1093a 000600010080520079000340208000002090200000005010400000703065000690037040020004000  2.5
00190891bf94 000210500010000030000305740031060050050000070080090120068902000070000080002031000  2.5
001bdbeaed98 006000700000709000008103900400000002800205001603000405040010060100000004002604100  2.5
001e888e1388 040209010100000008000541000900030004020010060000607000003104700410000093000020000  2.5
00206657bd45 074009001050610000130000000200001008001050200400200005000000079000084030300500480  2.5
"""
    
    static var difficilesA: [Puzzle] {
        
        let lignes = codeExemplesDifficilesA.components(separatedBy: .newlines)
            .filter { !$0.isEmpty }
        return lignes.map { ligne in Puzzle(code: ligne) }
    }
    
    static let codeExemplesDifficilesB = """
00009e4900fa 600050007030000000080409200015300000008000300000007590009501030000000080200070004  2.6
00017be70287 000006007007050000054090100090304080003060700010907050006080410000070900900100000  2.6
000231f9f9eb 000000000003702800060354090089000160070645030000000000040000070200506004000010000  2.6
00029205ba34 300005007010030590020008000708000000090000010000000902000900040032080070400600001  2.6
000471cdf93e 600589002030402060000070000000000000102060904006050800800040001010000070750020098  2.6
00056e1e5b20 400000007006030200005702900850473026000806000004020300003209800068000590000000000  2.6
0007bdd60a2d 000500601000030700000070025300005290020000070058200004810090000009080000602004000  2.6
0008d6f7974c 057038000006100207000090000630000001070020060500000034000080000205007400000910370  2.6
000c69cd273e 200090003040807010030060050070305020002406500000000000700000008409000201000102000  2.6
0012184140f1 000401000003000900061000240007090400050000010008703500080030060100000003500020004  2.6
"""
    
    static var difficilesB: [Puzzle] {
        
        let lignes = codeExemplesDifficilesB.components(separatedBy: .newlines)
            .filter { !$0.isEmpty }
        return lignes.map { ligne in Puzzle(code: ligne) }
    }
    
    static let codeExemplesDifficilesC = """
000354bb935a 869000312020000080070108040030000090700060004001902500000836000400070003000010000  2.8
000830f0e60d 000709000200080003070204050800000001000501000160070045050000030030000010604090508  2.8
00087d69ad66 005040009420703000003805070000000006040157020100000000060408900000201087200070600  2.8
000a0989e86e 004000500086000420520000068003000200200178004000306000002010800010000050408205906  2.8
000cb0ff8433 040000060000635000003000100005409700004702600900000004000204000300010008016000570  2.8
000e3e6c5406 008300009090000200100080047005094080400000002080560400850030004003000060200008900  2.8
000fd8eccf00 070000020003000700100805009050030010002000400400060002004607500000010000010254060  2.8
0011f4767d7c 000300700060009084001002000018004030300000007090200140000100400520800090009006000  2.8
00145ffd714b 600403107000000000500900430060008070002090300070100020028009005000000000401802003  2.8
0014cae36c43 109308002080705040000000008320000015000010000650000094400000000070106020800904607  2.8
"""
    
    static var difficilesC: [Puzzle] {
        
        let lignes = codeExemplesDifficilesC.components(separatedBy: .newlines)
            .filter { !$0.isEmpty }
        return lignes.map { ligne in Puzzle(code: ligne) }
    }

static let codeExemplesDifficilesD = """
00011fedd787 000050000000206000064000390045000810000020000000107000053000980090804060100030004  3.0
000bedf2eda3 900160200000009508001050906000687002000020000200391000506070800809500000007018004  3.0
001048897bbd 000403100370090000600070009000000415009000700842000000100050002000060081006201000  3.0
001563562591 800000007090072300003005000010000004509748201300000050000200100006180070900000005  3.0
001617ef5eca 048070120000602000000090000000040000309000402060000070001709300400503007530060019  3.0
001addb46f4a 600020009004908700200000003016802370400107008000050000020000040008000900109304507  3.0
0020df34115a 000050080470300050000471000001000530906000804048000700000265000090003028060090000  3.0
00220d73e6a8 050016000010002095008400700560000100300070004009000053006004200290800040000260080  3.0
0022610692cc 000090001005000060140280300009870020700000003030029100003067015050000600900030000  3.0
0028487a8ff0 900400006001026300040000020010060005030704090500010030020000040004190700700003002  3.0
"""

    static var difficilesD: [Puzzle] {
        
        let lignes = codeExemplesDifficilesD.components(separatedBy: .newlines)
            .filter { !$0.isEmpty }
        return lignes.map { ligne in Puzzle(code: ligne) }
    }

    static let codeExemplesDifficilesE = """
000160237251 970306042805000109000050000207000304010020080400738001000905000000000000100847003  3.2
00026b82b6d3 103600400590001008000200000809020000207080905000070204000002000600800039005003802  3.2
00030269ba02 200040003600239008000000000029000530850000016006102900070805060900703001000010000  3.2
0008ec54cb22 600185009000000000590000087800000003000704000054020910080203090460000031007040500  3.2
000a13ffe328 000600907000000300704300200040507600060080010001406020003002806006000000102008000  3.2
000a53b8f002 000102600000050290900006003300600900100030008007008005400500002026040000005203000  3.2
000b50e7dbf9 001000400509030108600801002320000085400506007000000000800403001040000050900010004  3.2
000c31272c83 600704005000000000900268001020000090004030200007000600060040050000020000300906004  3.2
000edbb50abd 910600803080003076300000000090030001000507000600040030000000007570300040203006018  3.2
0010f055a8fd 003000100208050903060000050700000005006301400380000019000030000030907080609020501  3.2
"""
    
    static var difficilesE: [Puzzle] {
        
        let lignes = codeExemplesDifficilesE.components(separatedBy: .newlines)
            .filter { !$0.isEmpty }
        return lignes.map { ligne in Puzzle(code: ligne) }
    }

}
